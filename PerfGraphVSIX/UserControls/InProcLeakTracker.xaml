<UserControl x:Class="PerfGraphVSIX.InProcLeakTracker"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:vs_shell="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:local="clr-namespace:PerfGraphVSIX"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
            <Style TargetType="Label">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
            </Style>
            <Style TargetType="TextBox">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"/>
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"/>
            </Style>
            <Style TargetType="CheckBox">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"/>
            </Style>
            <Style TargetType="Button">
                <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowButtonInactiveBorderBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ButtonTextBrushKey}}" />
            </Style>

            <Style TargetType="TabItem">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"/>
            </Style>
            <Style TargetType="TabControl">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"/>
            </Style>
            <Style TargetType="UserControl">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"/>
            </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,5,0,5" HorizontalAlignment="Right">
            <CheckBox Name="GcCheckbox" Content="GC" Width="40" Margin="5,3,5,0" Checked="OnGcChecked" ToolTip="Check to do a GC after each interval of refresh. View is refreshed every 1 second." />
            <Button Content="Reset" Width="40" Margin="5,0,5,0" Click="OnResetClick" ToolTip="Click to clear all currently tracked objects. Cannot be undone once performed untill VS is restarted"/>
            <Button Content="Copy" Width="40" Margin="5,0,5,0" Click="OnCopyClick" ToolTip="Click to copy all objects tracked to clipboard"/>
        </StackPanel>
        <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible">
            <StackPanel Orientation="Vertical">
                <TextBlock Margin="10" HorizontalAlignment="Left" Text="Probably Leaked object (Alive even after object claims to be closed):"/>
                <StackPanel Orientation="Vertical" Name="Closed" Margin="20,5,0,5"/>
                <TextBlock Margin="10" HorizontalAlignment="Left" Text="Alive object (Object claims to still be open):"/>
                <StackPanel Orientation="Vertical" Name="Open" Margin="20,5,0,5"/>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>
